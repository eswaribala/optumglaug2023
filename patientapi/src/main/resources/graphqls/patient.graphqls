schema {
    query: Query
    mutation: Mutation
}

scalar Date
scalar Long
interface Person{
    adharCardNo: String
    name: FullName
    gender:Gender,
    email:String
    mobileNo:Long
    dob: Date
}


type FullName{
    firstName:String
    middleName:String
    lastName:String
}

enum Gender{
    MALE,FEMALE,TRANSGENDER
}


type Patient implements Person{

    adharCardNo: String
    name: FullName
    gender:Gender,
    email:String
    mobileNo:Long
    dob: Date
    opId: Long


}





type Query{

    findAllPatients:[Patient]
    findPatientByAdharCardNo(adharCardNo: String): Patient
    findPatientByOPID(opId:Long):[Patient]
    findPatientByFirstName(firstName:String):[Patient]
    findPatientWithFilter(patientFilter:PatientFilter):[Patient]



}


input PatientInput{
    adharCardNo: String
    name: FullNameInput
    gender:Gender,
    email:String
    mobileNo:Long
    dob: Date
    opId: Long
}

input FullNameInput{
    firstName:String
    middleName:String
    lastName:String
}


type Mutation{
    addPatient(patient:PatientInput):Patient
    updatePatient(adharCardNo: String, mobileNo: Long):Patient
    deletePatient(adharCardNo: String):Boolean
}

input PatientFilter{
    opId:FilterField
    gender:GenderFilterField
    email: FilterField

    and: [PatientFilter]
    or: [PatientFilter]
    #not: PatientFilter
}



input FilterField{
    operator: String
    value: String
}

input GenderFilterField{
    operator:String
    value: Gender
}